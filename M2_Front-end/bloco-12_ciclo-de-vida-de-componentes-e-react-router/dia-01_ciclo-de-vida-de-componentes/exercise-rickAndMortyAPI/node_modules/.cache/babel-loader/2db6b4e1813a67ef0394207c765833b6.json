{"ast":null,"code":"var _jsxFileName = \"/home/jacqueline/Trybe/Trybe/M2_Front-end/bloco-12_ciclo-de-vida-de-componentes-e-react-router/dia-01_ciclo-de-vida-de-componentes/exercise-rickAndMortyAPI/src/App.js\";\nimport './index.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchCharacters = async () => {\n      const url = 'https://rickandmortyapi.com/api/character';\n      console.log(response);\n      const response = await fetch(url);\n      const data = await response.json();\n      this.setState({\n        characters: data.results\n      });\n    };\n\n    this.state = {\n      characters: []\n    };\n  }\n\n  render() {\n    const {\n      characters\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ricky and Morty Characters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: characters.map(_ref => {\n          let {\n            name,\n            image\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jacqueline/Trybe/Trybe/M2_Front-end/bloco-12_ciclo-de-vida-de-componentes-e-react-router/dia-01_ciclo-de-vida-de-componentes/exercise-rickAndMortyAPI/src/App.js"],"names":["React","Component","App","constructor","fetchCharacters","url","console","log","response","fetch","data","json","setState","characters","results","state","render","map","name","image"],"mappings":";AAAA,OAAO,aAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,eARc,GAQI,YAAY;AAC5B,YAAMC,GAAG,GAAG,2CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,YAAMA,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;AACA,YAAMK,IAAI,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEH,IAAI,CAACI;AADL,OAAd;AAGD,KAhBa;;AAGZ,SAAKC,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAYDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAiB,KAAKE,KAA5B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAEIF,UAAU,CAACI,GAAX,CAAe,QAAqB;AAAA,cAApB;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAoB;AAClC,8BACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAA,wBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,GAAG,EAAGC,KAAX;AAAmB,cAAA,GAAG,EAAGD;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAiCA,IAAjC;AAAA;AAAA;AAAA;AAAA,kBADF;AAMD,SAPD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAxCyB;;AA2C5B,eAAehB,GAAf","sourcesContent":["import './index.css'\n\nimport React, { Component } from 'react'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      characters: [],\n    };\n  }\n\n  fetchCharacters = async () => {\n    const url = 'https://rickandmortyapi.com/api/character';\n    console.log(response)\n    const response = await fetch(url);\n    const data =  await response.json();\n    this.setState({\n      characters: data.results,\n    })\n  }\n\n  render() {\n    const { characters } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>\n          Ricky and Morty Characters:\n        </h1>\n        <div className=\"body\">\n          {\n            characters.map(({ name, image }) => {\n              return (\n                <div className=\"container\" key={ name }>\n                  <h3>{ name }</h3>\n                  <img src={ image } alt={ name} />\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}