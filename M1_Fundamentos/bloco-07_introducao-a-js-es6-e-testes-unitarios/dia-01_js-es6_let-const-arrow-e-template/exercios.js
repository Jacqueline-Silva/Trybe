/* PARTE 1 ======================================================

1 - Fa√ßa as modifica√ß√µes necess√°rias na fun√ß√£o para que o seu comportamento respeite o escopo no qual cada vari√°vel foi declarada.
    Modifique a estrutura da fun√ß√£o para que ela seja uma arrow function .
    Modifique as concatena√ß√µes para template literals .
*/

const testingScope = (escopo) => {
  if (escopo === true) {
    let ifScope = 'N√£o devo ser utilizada fora do meu escopo (if)';
    ifScope = `${ifScope} √≥timo, fui utilizada no escopo !`;
    console.log(ifScope);
  } else {
    let elseScope = 'N√£o devo ser utilizada fora meu escopo (else)';
    console.log(elseScope);
  }
  console.log(`${ifScope} o que estou fazendo aqui ? :O`);
}
testingScope(true);

/* 
2 -Copie o c√≥digo abaixo e fa√ßa uma fun√ß√£o que retorne o array oddsAndEvens em ordem crescente.
Utilize template literals para que a chamada console.log(<seu c√≥digo>oddsAndEvens<seu c√≥digo>); retorne "Os n√∫meros 2,3,4,7,10,13 se encontram ordenados de forma crescente!".
B√¥nus (opcional): tente fazer o mesmo exerc√≠cio utilizando o m√©todo array.sort() . Spoiler: √â poss√≠vel realizar uma fun√ß√£o que ordene qualquer array de n√∫meros.
*/
const oddsAndEvens = [13, 3, 4, 10, 7, 2];
const ordenando = (a, b) => a - b;

console.log(`Os n√∫meros ${oddsAndEvens} se encontram ordenados de forma crescente! 
-> ${oddsAndEvens.sort(ordenando)}`); // ser√° necess√°rio alterar essa linha üòâ

/*
REF: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array/sort
*/

// PARTE 2 ========================================================


//  1 - Crie uma fun√ß√£o que receba um n√∫mero e retorne seu fatorial.
const fatorial = (numero) => {
  let fatorado = numero;
  for (let index = 1; index < numero; index += 1){
    fatorado *= index
  } return fatorado
}; 
console.log(fatorial(5));

// 2 - Crie uma fun√ß√£o que receba uma frase e retorne qual a maior palavra.
